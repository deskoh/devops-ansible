---
- name: get docker version
  shell: docker version | grep Version | awk '{print $2}'
  register: docker_version

- name: copy docker rpm file to server
  copy:
    src: "{{ item }}"
    dest: "/tmp/{{ item }}"
  with_items:
    - containerd.io-{{ containerd_version }}.el7.x86_64.rpm
    - docker-ce-{{ docker_version }}-3.el7.x86_64.rpm
    - docker-ce-cli-{{ docker_version }}-3.el7.x86_64.rpm
  when: docker_version.stdout == ''

- name: installing docker
  yum:
    name: "{{ packages }}"
    state: present

  vars:
    packages:
      - /tmp/containerd.io-{{ containerd_version }}.el7.x86_64.rpm
      - /tmp/docker-ce-{{ docker_version }}-3.el7.x86_64.rpm
      - /tmp/docker-ce-cli-{{ docker_version }}-3.el7.x86_64.rpm
  when: docker_version.stdout == ''

- name: clean up docker installer files
  file:
    path: "/tmp/{{ item }}"
    state: absent
  with_items:
    - containerd.io-{{ containerd_version }}.el7.x86_64.rpm
    - docker-ce-{{ docker_version }}-3.el7.x86_64.rpm
    - docker-ce-cli-{{ docker_version }}-3.el7.x86_64.rpm
  when: docker_version.stdout != ''

- name: start service docker, if not started
  service:
    name: docker
    state: started
    enabled: yes

# - name: adding {{ ansible_user_id }} to `docker` group
#   become: no
#   user:
#     name: "{{ ansible_user_id }}"
#     groups: docker
#     append: true

- name: copy Docker daemon configuration.
  template:
    src: daemon.json.j2
    dest: /etc/docker/daemon.json
    owner: root
    group: root
    backup: yes
  notify:
    - reload docker

- name: set ip forwarding in sysctl file and reload if necessary
  sysctl:
    name: net.ipv4.ip_forward
    value: '1'
    sysctl_set: yes
    state: present
    reload: yes
